{"version":3,"sources":["Alphabet.js","States.js","FinalStates.js","Transitions.js","App.js","serviceWorker.js","index.js"],"names":["Alphabet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteSymbolFromAlphabet","bind","assertThisInitialized","event","symbolToDelete","target","getAttribute","_this2","react_default","a","createElement","alphabet","map","item","index","datavalue","onClick","className","key","React","Component","States","deleteState","stateToDelete","states","FinalStates","deleteFinalState","finalStates","Transitions","transitions","from","symbol","to","App","state","initialState","identifier","notFinalStates","addSymbolToAlphabet","addState","setInitialState","addFinalState","addTransition","printAll","testWord","symbolIsAccepted","symbolAdded","$","val","isNewSymbol","i","length","html","focus","push","setState","selectedSymbol","removedSymbolIndex","indexOf","splice","stateDetectedList","temporaryIndex","console","log","stateAdded","isNewState","isInitialState","document","getElementById","checked","selectedState","removedStateIndex","addedState","newFinalStateIndex","fromState","toState","symbolRead","isNewTransition","currentTransitions","newTransition","currentState","wordAccepted","testedWord","split","testSymbol","typeof","src_Alphabet","type","data-toggle","data-target","src_States","src_FinalStates","src_Transitions","id","placeholder","tabIndex","role","data-dismiss","aria-label","aria-hidden","maxLength","value","htmlFor","defaultValue","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fbf6e0d.chunk.js","sourcesContent":["import React from 'react';\n\nclass Alphabet extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteSymbolFromAlphabet = this.deleteSymbolFromAlphabet.bind(this);\n  }\n\n  deleteSymbolFromAlphabet(event) {\n    const symbolToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteSymbolFromAlphabet(symbolToDelete);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.alphabet.map((item, index) => (\n          <kbd datavalue={item} onClick={this.deleteSymbolFromAlphabet} className=\"automatta-symbol\" key={index}>{item}</kbd>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Alphabet;","import React from 'react';\n\nclass States extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteState = this.deleteState.bind(this);\n  }\n\n  deleteState(event) {\n    const stateToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteState(stateToDelete);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.states.map((item, index) => (\n          <kbd datavalue={item} onClick={this.deleteState} className=\"automatta-symbol\" key={index}>{item}</kbd>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default States;","import React from 'react';\n\nclass FinalStates extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteFinalState = this.deleteFinalState.bind(this);\n  }\n\n  deleteFinalState(event) {\n    const stateToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteFinalState(stateToDelete);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.finalStates.map((item, index) => (\n          <kbd datavalue={item} onClick={this.deleteFinalState} className=\"automatta-symbol\" key={index}>{item}</kbd>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FinalStates;","import React from 'react';\n\nclass Transitions extends React.Component {\n\n  render() {\n    return (\n      <div>\n        {this.props.transitions.map((item, index) => (\n          <span className=\"alphabet-symbol\" key={index}>\n            Quando em <kbd>{item.from}</kbd> ler <kbd>{item.symbol}</kbd> ir para <kbd>{item.to}</kbd>\n            <br/>\n          </span>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Transitions;","import React from 'react';\nimport $ from 'jquery';\n\nimport './App.css';\n\nimport Alphabet from './Alphabet.js'\nimport States from './States.js'\nimport FinalStates from './FinalStates.js'\nimport Transitions from './Transitions.js'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      alphabet: [\"a\", \"b\", \"c\", \"d\"],\n      states: [\"q0\", \"q1\", \"q2\", \"q3\"],\n      initialState: \"q0\",\n      finalStates: [\"q0\"],\n      transitions: [\n        {\n          \"identifier\": \"q0aq1\",\n          \"from\": \"q0\",\n          \"to\": \"q1\",\n          \"symbol\": \"a\"\n        },{\n          \"identifier\": \"q1bq3\",\n          \"from\": \"q1\",\n          \"to\": \"q3\",\n          \"symbol\": \"b\"\n        },{\n          \"identifier\": \"q2dq0\",\n          \"from\": \"q2\",\n          \"to\": \"q0\",\n          \"symbol\": \"d\"\n        }\n      ],\n      notFinalStates: [\"q1\", \"q2\", \"q3\"]\n    };\n\n    this.addSymbolToAlphabet = this.addSymbolToAlphabet.bind(this);\n    this.deleteSymbolFromAlphabet = this.deleteSymbolFromAlphabet.bind(this);\n\n    this.deleteState = this.deleteState.bind(this);\n    this.addState = this.addState.bind(this);\n\n    this.setInitialState = this.setInitialState.bind(this);\n\n    this.addFinalState = this.addFinalState.bind(this);\n    this.deleteFinalState = this.deleteFinalState.bind(this);\n\n    this.addTransition = this.addTransition.bind(this);\n    this.printAll = this.printAll.bind(this);\n\n    this.testWord = this.testWord.bind(this);\n    this.symbolIsAccepted = this.symbolIsAccepted.bind(this);\n\n  }\n\n  addSymbolToAlphabet() {\n    let symbolAdded = $(\"#symbol\").val();\n    let alphabet = this.state.alphabet;\n    let isNewSymbol = true;\n\n    for (let i=0; i < alphabet.length; i++) {\n      if (symbolAdded === alphabet[i])\n        isNewSymbol = false;\n        $(\"#symbolError\").html(\"Símbolo já adicionado\");\n        $(\"#symbolSuccess\").html(\"\");\n        $(\"#symbol\").val(\"\");\n        $(\"#symbol\").focus();\n    }\n    \n    if (symbolAdded.length < 1) {\n      $(\"#symbol\").val(\"\");\n      $(\"#symbol\").focus();\n      $(\"#symbolError\").html(\"Está vazio!\");\n      $(\"#symbolSuccess\").html(\"\");\n    } else if (isNewSymbol) {\n      alphabet.push(symbolAdded);\n\n      this.setState({\n        \"alphabet\": alphabet\n      });\n\n      $(\"#symbol\").val(\"\");\n      $(\"#symbol\").focus();\n      $(\"#symbolError\").html(\"\");\n      $(\"#symbolSuccess\").html(\"Símbolo adicionado com sucesso\");\n    }\n  }\n\n  deleteSymbolFromAlphabet(selectedSymbol) {\n    let alphabet = this.state.alphabet;\n    let transitions = this.state.transitions;\n    const removedSymbolIndex = alphabet.indexOf(selectedSymbol);\n\n    alphabet.splice(removedSymbolIndex, 1);\n\n    let stateDetectedList = [];\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].symbol === selectedSymbol) {\n        stateDetectedList.push(transitions[i])\n      }\n    }\n\n    for (let i = 0; i < stateDetectedList.length; i++) {\n      let temporaryIndex = transitions.indexOf(stateDetectedList[i]);\n      transitions.splice(temporaryIndex, 1);\n    }\n\n    this.setState({\n        \"alphabet\": alphabet,\n        \"transitions\": transitions\n      });\n  }\n\n  printAll() {\n    console.log(this.state)\n  }\n\n  addState() {\n    let stateAdded = $(\"#state\").val();\n    let states = this.state.states;\n    let notFinalStates = this.state.notFinalStates;\n    let isNewState = true;\n    let isInitialState = document.getElementById('initialState').checked;\n\n    for (let i=0; i < states.length; i++) {\n      if (stateAdded === states[i])\n        isNewState = false;\n        $(\"#stateError\").html(\"Estado já adicionado\");\n        $(\"#stateSuccess\").html(\"\");\n        $(\"#state\").val(\"\");\n        $(\"#state\").focus();\n    }\n\n    if (stateAdded.length < 1) {\n      $(\"#state\").val(\"\");\n      $(\"#state\").focus();\n      $(\"#stateError\").html(\"Está vazio!\");\n      $(\"#stateSuccess\").html(\"\");\n    } else if (isNewState) {\n      states.push(stateAdded);\n      notFinalStates.push(stateAdded);\n\n      this.setState({\n        \"states\": states,\n        \"notFinalStates\": notFinalStates\n      });\n\n      if (isInitialState) {\n        this.setState({\n          \"initialState\": stateAdded\n        });\n      }\n\n      $(\"#state\").val(\"\");\n      $(\"#state\").focus();\n      $(\"#stateError\").html(\"\");\n      $(\"#stateSuccess\").html(\"Estado adicionado com sucesso\");\n    }\n  }\n\n  deleteState(selectedState) {\n    let states = this.state.states;\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n    let transitions = this.state.transitions;\n\n    const removedStateIndex = states.indexOf(selectedState);\n\n    states.splice(removedStateIndex, 1);\n\n    if (finalStates.indexOf(selectedState) > -1) {\n      finalStates.splice(finalStates.indexOf(selectedState), 1);\n    }\n\n    if (notFinalStates.indexOf(selectedState) > -1) {\n      notFinalStates.splice(notFinalStates.indexOf(selectedState), 1);\n    }\n\n    let stateDetectedList = [];\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].from === selectedState || transitions[i].to === selectedState) {\n        stateDetectedList.push(transitions[i])\n      }\n    }\n\n    for (let i = 0; i < stateDetectedList.length; i++) {\n      let temporaryIndex = transitions.indexOf(stateDetectedList[i]);\n      transitions.splice(temporaryIndex, 1);\n    }\n\n    this.setState({\n      \"states\": states,\n      \"finalStates\": finalStates,\n      \"notFinalStates\": notFinalStates,\n      \"transitions\": transitions\n    });\n\n    if (this.state.initialState === selectedState) {\n      this.setState({\n        \"initialState\": states[0]\n      })\n    }\n  }\n\n  addFinalState() {\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n\n    let addedState = $(\"#finalState\").val();\n\n    if (addedState !== \"none\") {\n      finalStates.push(addedState);\n      let newFinalStateIndex = notFinalStates.indexOf(addedState);\n      notFinalStates.splice(newFinalStateIndex, 1);\n\n      this.setState({\n        \"finalStates\": finalStates,\n        \"notFinalStates\": notFinalStates\n      })\n    }\n  }\n\n  deleteFinalState(selectedState) {\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n\n    const removedStateIndex = finalStates.indexOf(selectedState);\n\n    finalStates.splice(removedStateIndex, 1);\n    notFinalStates.push(selectedState)\n\n    this.setState({\n      \"finalStates\": finalStates,\n      \"notFinalStates\": notFinalStates\n    });\n  } \n\n  addTransition() {\n    let fromState = $(\"#fromState\").val();\n    let toState = $(\"#toState\").val();\n    let symbolRead = $(\"#symbolRead\").val();\n    let identifier = fromState + symbolRead + toState;\n    let isNewTransition = true;\n\n    let currentTransitions = this.state.transitions;\n\n    for (let i = 0; i < currentTransitions.length; i++) {\n      if (identifier === currentTransitions[i].identifier) {\n        isNewTransition = false;\n      }\n    }\n\n    if (isNewTransition) {\n\n      let newTransition = {\n        \"identifier\": identifier,\n        \"from\": fromState,\n        \"symbol\": symbolRead,\n        \"to\": toState\n      }\n\n      currentTransitions.push(newTransition)\n\n      this.setState({\n        \"transitions\": currentTransitions\n      });\n    }\n  }\n\n  setInitialState(){\n\n  }\n\n  symbolIsAccepted(currentState, symbol) {\n\n    const transitions = this.state.transitions;\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].from === currentState && transitions[i].symbol === symbol) {\n        return transitions[i];\n      }\n    }\n\n    return currentState;\n  }\n\n\n  testWord() {\n    const transitions = this.state.transitions;\n    const alphabet = this.state.alphabet;\n    const finalStates = this.state.finalStates;\n    const initialState = this.state.initialState;\n    let wordAccepted = false;\n\n    let testedWord = $(\"#testedWord\").val();\n    testedWord = testedWord.split('');\n\n    let testSymbol = this.symbolIsAccepted(initialState, testedWord[0]);\n\n    let i = 0;\n\n    while (!testSymbol.typeof === \"string\") {\n      testSymbol = this.symbolIsAccepted(initialState, testedWord[i]);\n       if (i === testedWord.length - 1) {\n        wordAccepted = true;\n        break;\n      } else {\n        i++; \n      }\n    }\n\n    if (wordAccepted === false) {\n      console.log(\"Palavra rejeitada \", testSymbol);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-2\">\n        <div className=\"row\">\n          <div className=\"col-4 text-center\">\n            <h5>Alfabeto</h5>\n            <Alphabet deleteSymbolFromAlphabet={this.deleteSymbolFromAlphabet} alphabet={this.state.alphabet}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#alphabetModal\" className=\"btn mt-2 btn-dark\">Adicionar símbolo</button>\n            <br/><small className=\"text-muted\">Clique em um símbolo para removê-lo</small>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Estados</h5>\n            <States deleteState={this.deleteState} states={this.state.states}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#stateModal\" className=\"btn mt-2 btn-dark\">Adicionar estado</button>\n            <br/><small className=\"text-muted\">Clique em um estado para removê-lo</small>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Estados Finais</h5>\n            <FinalStates deleteFinalState={this.deleteFinalState} finalStates={this.state.finalStates}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#finalStateModal\" className=\"btn mt-2 btn-dark\">Adicionar estado final</button>\n            <br/><small className=\"text-muted\">Clique em um estado final para removê-lo</small>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-8 text-center\">\n            <h5>Função de transição</h5>\n            <Transitions transitions={this.state.transitions}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#transitionModal\" className=\"btn mt-2 btn-dark\">Adicionar transição</button>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Palavra</h5>\n            <input type=\"text\" className=\"form-control\" id=\"testedWord\" placeholder=\"Ex.: aabdc\"/>\n            <button type=\"button\" onClick={this.testWord} className=\"btn mt-2 btn-dark\">Testar palavra</button>\n            <button onClick={this.printAll} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"alphabetModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar símbolo</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <input maxLength=\"1\" type=\"text\" className=\"form-control\" id=\"symbol\" placeholder=\"Ex.: a\"/>\n                  <small id=\"symbolError\" className=\"text-danger\"></small>\n                  <small id=\"symbolSuccess\" className=\"text-success\"></small>\n                  <small className=\"form-text text-muted\">Use apenas um símbolo</small>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addSymbolToAlphabet} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"stateModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar estado</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <input maxLength=\"2\" type=\"text\" className=\"form-control\" id=\"state\" placeholder=\"Ex.: a\"/>\n                  <small id=\"stateError\" className=\"text-danger\"></small>\n                  <small id=\"stateSuccess\" className=\"text-success\"></small>\n                  <small className=\"form-text text-muted\">Use até dois símbolos</small>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"initialState\"/>\n                    <label className=\"form-check-label\" htmlFor=\"initialState\">\n                      Estado inicial\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addState} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"finalStateModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar estado final</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <select id=\"finalState\" defaultValue=\"none\" className=\"custom-select\">\n                    <option value=\"none\"> Selecione um estado </option>\n                    {this.state.notFinalStates.map((item, index) => (\n                      <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addFinalState} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"transitionModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar transição</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <div className=\"input-group align-items-center\">\n                    Quando em\n                     <select id=\"fromState\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.states.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                    ler\n                     <select id=\"symbolRead\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.alphabet.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                    ir para\n                     <select id=\"toState\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.states.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addTransition} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}