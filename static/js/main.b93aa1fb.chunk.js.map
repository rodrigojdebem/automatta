{"version":3,"sources":["Alphabet.js","States.js","FinalStates.js","Transitions.js","App.js","serviceWorker.js","index.js"],"names":["Alphabet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteSymbolFromAlphabet","bind","assertThisInitialized","event","symbolToDelete","target","getAttribute","_this2","alphabet","react_default","a","createElement","className","map","item","index","datavalue","onClick","key","React","Component","States","deleteState","renderStates","stateToDelete","states","initialState","statesList","length","i","push","FinalStates","deleteFinalState","finalStates","deleteButtonStyle","width","cursor","Transitions","deleteTransition","transitions","from","symbol","to","style","identifier","src","alt","App","state","notFinalStates","addSymbolToAlphabet","addState","addFinalState","addTransition","testWord","transitionExists","symbolAdded","$","val","isNewSymbol","html","focus","setState","selectedSymbol","removedSymbolIndex","indexOf","splice","stateDetectedList","temporaryIndex","console","log","stateAdded","isNewState","isInitialState","document","getElementById","checked","selectedState","removedStateIndex","addedState","newFinalStateIndex","selectedTransition","removedTransitionIndex","undefined","fromState","toState","symbolRead","isNewTransition","currentTransitions","newTransition","result","transition","testedWord","splitWord","split","t","Swal","fire","title","type","confirmButtonText","customClass","confirmButton","buttonsStyling","stoppingState","class","src_Alphabet","data-toggle","data-target","src_States","src_FinalStates","src_Transitions","id","placeholder","tabIndex","role","data-dismiss","aria-label","aria-hidden","maxLength","value","htmlFor","defaultValue","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b93aa1fb.chunk.js","sourcesContent":["import React from 'react';\n\nclass Alphabet extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteSymbolFromAlphabet = this.deleteSymbolFromAlphabet.bind(this);\n  }\n\n  deleteSymbolFromAlphabet(event) {\n    const symbolToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteSymbolFromAlphabet(symbolToDelete);\n  }\n\n  render() {\n    if (this.props.alphabet < 1) {\n      return (\n        <div className=\"text-muted\">Nenhum símbolo adicionado</div>\n      )\n    }\n    return (\n      <div>\n        {this.props.alphabet.map((item, index) => (\n          <kbd datavalue={item} onClick={this.deleteSymbolFromAlphabet} className=\"automatta-symbol\" key={index}>{item}</kbd>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Alphabet;","import React from 'react';\n\nclass States extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteState = this.deleteState.bind(this);\n    this.renderStates = this.renderStates.bind(this);\n  }\n\n  deleteState(event) {\n    const stateToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteState(stateToDelete);\n  }\n\n  renderStates(){\n    const states = this.props.states;\n    const initialState =  this.props.initialState;\n    let statesList = [];\n\n    if (states.length < 1) {\n      return (\n        <span className=\"text-muted\">Nenhum estado adicionado</span>\n      )\n    }\n\n    for (var i = 0; i < states.length; i++) {\n      if (states[i] === initialState) {\n        statesList.push(\n          <kbd datavalue={states[i]} onClick={this.deleteState} className=\"automatta-symbol initial\" key={i}>{states[i]}</kbd>)\n      } else {\n        statesList.push(\n          <kbd datavalue={states[i]} onClick={this.deleteState} className=\"automatta-symbol\" key={i}>{states[i]}</kbd>)\n      }\n    }\n\n    return statesList;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderStates()}\n      </div>\n    );\n  }\n}\n\nexport default States;","import React from 'react';\n\nclass FinalStates extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteFinalState = this.deleteFinalState.bind(this);\n  }\n\n  deleteFinalState(event) {\n    const stateToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteFinalState(stateToDelete);\n  }\n\n  render() {\n    if (this.props.finalStates < 1) {\n      return (\n        <div className=\"text-muted\">Nenhum estado adicionado</div>\n      )\n    }\n    return (\n      <div>\n        {this.props.finalStates.map((item, index) => (\n          <kbd datavalue={item} onClick={this.deleteFinalState} className=\"automatta-symbol\" key={index}>{item}</kbd>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FinalStates;","import React from 'react';\n\nconst deleteButtonStyle = {\n  width: '12px',\n  cursor: 'pointer',\n}\n\nclass Transitions extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.deleteTransition = this.deleteTransition.bind(this);\n  }\n\n  deleteTransition(event) {\n    const stateToDelete = event.target.getAttribute(\"datavalue\");\n    this.props.deleteTransition(stateToDelete);\n  }\n\n  render() {\n    if (this.props.transitions < 1) {\n      return (\n        <div className=\"text-muted\">Nenhuma transição adicionado</div>\n      )\n    }\n    return (\n      <div>\n        {this.props.transitions.map((item, index) => (\n          <div className=\"mb-1\" key={index}>\n            Quando em <kbd>{item.from}</kbd> ler <kbd>{item.symbol}</kbd> ir para <kbd className=\"mr-1\">{item.to}</kbd>  \n            <img style={deleteButtonStyle} onClick={this.deleteTransition} datavalue={item.identifier} src=\"/open-iconic/svg/trash.svg\" alt=\"Delete transition button\"/>\n            <br/>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Transitions;","import React from 'react';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\n\nimport './App.css';\n\nimport Alphabet from './Alphabet.js'\nimport States from './States.js'\nimport FinalStates from './FinalStates.js'\nimport Transitions from './Transitions.js'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      alphabet: [\"a\", \"b\"],\n      states: [\"q0\", \"q1\"],\n      initialState: \"q0\",\n      finalStates: [\"q1\"],\n      transitions: [\n        {\n          \"identifier\": \"q0aq1\",\n          \"from\": \"q0\",\n          \"symbol\": \"a\",\n          \"to\": \"q1\"\n        },\n        {\n          \"identifier\": \"q1aq0\",\n          \"from\": \"q1\",\n          \"symbol\": \"b\",\n          \"to\": \"q0\"\n        },\n        {\n          \"identifier\": \"q1aq1\",\n          \"from\": \"q1\",\n          \"symbol\": \"a\",\n          \"to\": \"q1\"\n        }\n      ],\n      notFinalStates: [\"q0\"]\n    };\n\n    this.addSymbolToAlphabet = this.addSymbolToAlphabet.bind(this);\n    this.deleteSymbolFromAlphabet = this.deleteSymbolFromAlphabet.bind(this);\n\n    this.deleteState = this.deleteState.bind(this);\n    this.addState = this.addState.bind(this);\n\n    this.addFinalState = this.addFinalState.bind(this);\n    this.deleteFinalState = this.deleteFinalState.bind(this);\n\n    this.addTransition = this.addTransition.bind(this);\n    this.deleteTransition = this.deleteTransition.bind(this);\n\n    this.testWord = this.testWord.bind(this);\n    this.transitionExists = this.transitionExists.bind(this);\n\n  }\n\n  addSymbolToAlphabet() {\n    let symbolAdded = $(\"#symbol\").val();\n    let alphabet = this.state.alphabet;\n    let isNewSymbol = true;\n\n    for (let i=0; i < alphabet.length; i++) {\n      if (symbolAdded === alphabet[i])\n        isNewSymbol = false;\n        $(\"#symbolError\").html(\"Símbolo já adicionado\");\n        $(\"#symbolSuccess\").html(\"\");\n        $(\"#symbol\").val(\"\");\n        $(\"#symbol\").focus();\n    }\n    \n    if (symbolAdded.length < 1) {\n      $(\"#symbol\").val(\"\");\n      $(\"#symbol\").focus();\n      $(\"#symbolError\").html(\"Está vazio!\");\n      $(\"#symbolSuccess\").html(\"\");\n    } else if (isNewSymbol) {\n      alphabet.push(symbolAdded);\n\n      this.setState({\n        \"alphabet\": alphabet\n      });\n\n      $(\"#symbol\").val(\"\");\n      $(\"#symbol\").focus();\n      $(\"#symbolError\").html(\"\");\n      $(\"#symbolSuccess\").html(\"Símbolo adicionado com sucesso\");\n    }\n  }\n\n  deleteSymbolFromAlphabet(selectedSymbol) {\n    let alphabet = this.state.alphabet;\n    let transitions = this.state.transitions;\n    const removedSymbolIndex = alphabet.indexOf(selectedSymbol);\n\n    alphabet.splice(removedSymbolIndex, 1);\n\n    let stateDetectedList = [];\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].symbol === selectedSymbol) {\n        stateDetectedList.push(transitions[i])\n      }\n    }\n\n    for (let i = 0; i < stateDetectedList.length; i++) {\n      let temporaryIndex = transitions.indexOf(stateDetectedList[i]);\n      transitions.splice(temporaryIndex, 1);\n    }\n\n    this.setState({\n        \"alphabet\": alphabet,\n        \"transitions\": transitions\n      });\n  }\n\n  printAll() {\n    console.log(this.state)\n  }\n\n  addState() {\n    let stateAdded = $(\"#state\").val();\n    let states = this.state.states;\n    let notFinalStates = this.state.notFinalStates;\n    let isNewState = true;\n    let isInitialState = document.getElementById('initialState').checked;\n\n    for (let i=0; i < states.length; i++) {\n      if (stateAdded === states[i])\n        isNewState = false;\n        $(\"#stateError\").html(\"Estado já adicionado\");\n        $(\"#stateSuccess\").html(\"\");\n        $(\"#state\").val(\"\");\n        $(\"#state\").focus();\n    }\n\n    if (stateAdded.length < 1) {\n      $(\"#state\").val(\"\");\n      $(\"#state\").focus();\n      $(\"#stateError\").html(\"Está vazio!\");\n      $(\"#stateSuccess\").html(\"\");\n    } else if (isNewState) {\n      states.push(stateAdded);\n      notFinalStates.push(stateAdded);\n\n      this.setState({\n        \"states\": states,\n        \"notFinalStates\": notFinalStates\n      });\n\n      if (isInitialState) {\n        this.setState({\n          \"initialState\": stateAdded\n        });\n      }\n\n      $(\"#state\").val(\"\");\n      $(\"#state\").focus();\n      $(\"#stateError\").html(\"\");\n      $(\"#stateSuccess\").html(\"Estado adicionado com sucesso\");\n    }\n  }\n\n  deleteState(selectedState) {\n    let states = this.state.states;\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n    let transitions = this.state.transitions;\n\n    const removedStateIndex = states.indexOf(selectedState);\n\n    states.splice(removedStateIndex, 1);\n\n    if (finalStates.indexOf(selectedState) > -1) {\n      finalStates.splice(finalStates.indexOf(selectedState), 1);\n    }\n\n    if (notFinalStates.indexOf(selectedState) > -1) {\n      notFinalStates.splice(notFinalStates.indexOf(selectedState), 1);\n    }\n\n    let stateDetectedList = [];\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].from === selectedState || transitions[i].to === selectedState) {\n        stateDetectedList.push(transitions[i])\n      }\n    }\n\n    for (let i = 0; i < stateDetectedList.length; i++) {\n      let temporaryIndex = transitions.indexOf(stateDetectedList[i]);\n      transitions.splice(temporaryIndex, 1);\n    }\n\n    this.setState({\n      \"states\": states,\n      \"finalStates\": finalStates,\n      \"notFinalStates\": notFinalStates,\n      \"transitions\": transitions\n    });\n\n    if (this.state.initialState === selectedState) {\n      this.setState({\n        \"initialState\": states[0]\n      })\n    }\n  }\n\n  addFinalState() {\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n\n    let addedState = $(\"#finalState\").val();\n\n    if (addedState !== \"none\") {\n      finalStates.push(addedState);\n      let newFinalStateIndex = notFinalStates.indexOf(addedState);\n      notFinalStates.splice(newFinalStateIndex, 1);\n\n      this.setState({\n        \"finalStates\": finalStates,\n        \"notFinalStates\": notFinalStates\n      })\n    }\n  }\n\n  deleteFinalState(selectedState) {\n    let finalStates = this.state.finalStates;\n    let notFinalStates = this.state.notFinalStates;\n\n    const removedStateIndex = finalStates.indexOf(selectedState);\n\n    finalStates.splice(removedStateIndex, 1);\n    notFinalStates.push(selectedState)\n\n    this.setState({\n      \"finalStates\": finalStates,\n      \"notFinalStates\": notFinalStates\n    });\n  }\n\n  deleteTransition(selectedTransition)  {\n    let transitions = this.state.transitions;\n\n    let removedTransitionIndex = undefined;\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].identifier === selectedTransition) {\n        removedTransitionIndex = i;\n      }\n    }\n\n    if (removedTransitionIndex !== undefined) {\n      transitions.splice(removedTransitionIndex, 1);\n    }\n\n    this.setState({\n      \"transitions\": transitions\n    });\n  }\n\n  addTransition() {\n    let fromState = $(\"#fromState\").val();\n    let toState = $(\"#toState\").val();\n    let symbolRead = $(\"#symbolRead\").val();\n    let identifier = fromState + symbolRead + toState;\n    let isNewTransition = true;\n\n    let currentTransitions = this.state.transitions;\n\n    if (fromState !== \"none\" && toState !== \"none\" && symbolRead !== \"none\") {\n      for (let i = 0; i < currentTransitions.length; i++) {\n        if (identifier === currentTransitions[i].identifier) {\n          isNewTransition = false;\n        }\n      }\n\n      if (isNewTransition) {\n\n        let newTransition = {\n          \"identifier\": identifier,\n          \"from\": fromState,\n          \"symbol\": symbolRead,\n          \"to\": toState\n        }\n\n        currentTransitions.push(newTransition)\n\n        this.setState({\n          \"transitions\": currentTransitions\n        });\n      }\n    }\n  }\n\n  transitionExists(fromState, symbol) {\n    const transitions = this.state.transitions;\n\n    let result = {\n      \"result\": false,\n      \"transition\": fromState\n    };\n\n    for (let i = 0; i < transitions.length; i++) {\n      if (transitions[i].from === fromState && transitions[i].symbol === symbol) {\n        result.result = true;\n        result.transition = transitions[i];\n      }\n    }\n\n    return result;\n  }\n\n  testWord() {\n    const transitions = this.state.transitions;\n    const alphabet = this.state.alphabet;\n    const finalStates = this.state.finalStates;\n    const initialState = this.state.initialState;\n\n    let testedWord = $(\"#testedWord\").val();\n    const splitWord = testedWord.split('');\n\n    let t = this.transitionExists(initialState, splitWord[0]);\n    \n    if (t.result === false) {\n      Swal.fire({\n        title: 'Opa!',\n        html: 'O autômato não aceita a palavra: <br><strong>' + testedWord + '</strong><br><br> Paramos no estado <kbd>' + initialState + '</kbd>.',\n        type: 'error',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'btn btn-info'\n        },\n        buttonsStyling: false\n      })\n      return false;\n    }\n\n    for (let i = 1; i < splitWord.length; i++) {\n      t = this.transitionExists(t.transition.to, splitWord[i]);\n    \n      if (t.result === false) {\n        const stoppingState = t.transition.to !== undefined ? t.transition.to : t.transition;\n        Swal.fire({\n          title: 'Opa!',\n          html: 'O autômato não aceita a palavra: <br><strong>' + testedWord + '</strong><br><br> Paramos no estado <kbd>' + stoppingState + '</kbd>.',\n          type: 'error',\n          confirmButtonText: 'OK',\n          customClass: {\n            confirmButton: 'btn btn-info'\n          },\n          buttonsStyling: false\n        })\n        return false;\n      }\n    }\n\n    if (finalStates.indexOf(t.transition.to) > -1) {\n      Swal.fire({\n        title: 'Sucesso',\n        html: 'O autômato aceita a palavra: <br><strong>' + testedWord + '</strong><br><br> Paramos no estado <kbd>' + t.transition.to + '</kbd>.',\n        type: 'success',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'btn btn-info'\n        },\n        buttonsStyling: false\n      })\n      return true;\n    }\n\n    const stoppingState = t.transition.to !== undefined ? t.transition.to : t.transition;\n\n    Swal.fire({\n      title: 'Opa!',\n      html: 'O autômato não aceita a palavra: <br><strong>' + testedWord + '</strong><br><br> Paramos no estado <kbd>' + stoppingState + '</kbd>.',\n      type: 'error',\n      confirmButtonText: 'OK',\n      customClass: {\n        confirmButton: 'btn btn-info'\n      },\n      buttonsStyling: false\n    })\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-2\">\n        <div class=\"jumbotron\">\n          <h1 class=\"display-4\">Automatta</h1>\n          <p class=\"lead\">Ferramenta simples para criar autômatos finitos deteminísticos e testar palavras.</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 text-center\">\n            <h5>Alfabeto</h5>\n            <Alphabet deleteSymbolFromAlphabet={this.deleteSymbolFromAlphabet} alphabet={this.state.alphabet}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#alphabetModal\" className=\"btn mt-2 btn-dark\">Adicionar símbolo</button>\n            <br/><small className=\"text-muted\">Clique em um símbolo para removê-lo</small>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Estados</h5>\n            <States initialState={this.state.initialState} deleteState={this.deleteState} states={this.state.states}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#stateModal\" className=\"btn mt-2 btn-dark\">Adicionar estado</button>\n            <br/><small className=\"text-muted\">Clique em um estado para removê-lo</small>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Estados Finais</h5>\n            <FinalStates deleteFinalState={this.deleteFinalState} finalStates={this.state.finalStates}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#finalStateModal\" className=\"btn mt-2 btn-dark\">Adicionar estado final</button>\n            <br/><small className=\"text-muted\">Clique em um estado final para removê-lo</small>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-8 text-center\">\n            <h5>Função de transição</h5>\n            <Transitions deleteTransition={this.deleteTransition} transitions={this.state.transitions}/>\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#transitionModal\" className=\"btn mt-2 btn-dark\">Adicionar transição</button>\n          </div>\n          <div className=\"col-4 text-center\">\n            <h5>Palavra</h5>\n            <input type=\"text\" className=\"form-control\" id=\"testedWord\" placeholder=\"Ex.: ababaaaba\"/>\n            <button type=\"button\" onClick={this.testWord} className=\"btn mt-2 btn-dark\">Testar palavra</button>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"alphabetModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar símbolo</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <input maxLength=\"1\" type=\"text\" className=\"form-control\" id=\"symbol\" placeholder=\"Ex.: a\"/>\n                  <small id=\"symbolError\" className=\"text-danger\"></small>\n                  <small id=\"symbolSuccess\" className=\"text-success\"></small>\n                  <small className=\"form-text text-muted\">Use apenas um símbolo</small>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addSymbolToAlphabet} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"stateModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar estado</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <input maxLength=\"2\" type=\"text\" className=\"form-control\" id=\"state\" placeholder=\"Ex.: a\"/>\n                  <small id=\"stateError\" className=\"text-danger\"></small>\n                  <small id=\"stateSuccess\" className=\"text-success\"></small>\n                  <small className=\"form-text text-muted\">Use até dois símbolos</small>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"initialState\"/>\n                    <label className=\"form-check-label\" htmlFor=\"initialState\">\n                      Estado inicial\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addState} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"finalStateModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar estado final</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <select id=\"finalState\" defaultValue=\"none\" className=\"custom-select\">\n                    <option value=\"none\"> Selecione um estado </option>\n                    {this.state.notFinalStates.map((item, index) => (\n                      <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addFinalState} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"transitionModal\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Adicionar transição</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <div className=\"input-group align-items-center\">\n                    Quando em\n                     <select id=\"fromState\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.states.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                    ler\n                     <select id=\"symbolRead\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.alphabet.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                    ir para\n                     <select id=\"toState\" defaultValue=\"none\" className=\"custom-select ml-1 mr-1\">\n                      <option value=\"none\"> -- </option>\n                      {this.state.states.map((item, index) => (\n                        <option value={item} className=\"automatta-symbol\" key={index}>{item}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button onClick={this.addTransition} type=\"button\" className=\"btn btn-info\">Adicionar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}